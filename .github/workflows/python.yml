name: python

on:
  push:
    branches: [main, danmill/pyright]
    tags: [ 'v0.*' ]
  pull_request:
    branches: [main]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Check License Lines
      uses: kt3k/license_checker@v1.0.3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.1.4
      with:
        python-version: ${{ matrix.python-version }}
    - name: pip install
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - run:  black --check src
    - run:  flake8 .
      working-directory: src
      if: always()
    - run: pytest src
      if: always()

    # This and the next step follow:
    # https://gist.github.com/alukach/6f3a371e9af600e417aca1b36806ad72
    - name: setup node.js for pyright
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: pyright
      run: |
        npm install -g pyright
        pyright
      working-directory: src

    - name: build wheel
      run: |
        python setup.py sdist bdist_wheel
      working-directory: src
    - name: upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: src/dist

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: download wheel
      uses: actions/download-artifact@v2

    # Follow:
    # https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    # to publish the generated wheel to pypi.org. You may optionally remove the
    # 'if' condition, and add a 'with'
    # repository_url: https://test.pypi.org/legacy, and use the password
    # test_pypi_password to verify that publication to test.pypi.org works.
    - name: pypi
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}
